#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright (c) 2021, DroidDrive
# -----------------------------------------------------------------------------
import os

modulename = "etl"

def init(module):
    module.name = modulename
    module.description = "embedded template library module"

def prepare(module, options):
    device = options[":target"]
    core = device.get_driver("core")
    if not (core and core["type"].startswith("cortex-m")):
        return False
    module.depends(
        ":architecture:assert",
        ":cmsis:device",
        ":platform:clock")
    return True

def build(env):
    repoName = env.query(":repoName")
    env.outbasepath = repoName

    generalIgnoreFiles = [
        ".vscode"
    ]
    filterFiles = []
    filterFiles.extend(generalIgnoreFiles)

    #### copy stuff we need
    env.copy("etl/include/", "include/", ignore=env.ignore_files(*filterFiles))
    
    ###
    #includepath = os.path.join(env.outpath(""), "lely-core/include")
    includepath = os.path.join(repoName, "include")
    env.collect(":build:path.include", includepath)
    
    cppFlags = {
        "-std": "c++20",
    }

    for k,v, in cppFlags.items():
        env.collect(":build:cxxflags", "%s=%s" % (k,v)) 


    

